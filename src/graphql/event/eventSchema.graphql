type Categoria {
  id: ID!
  nombre: String!
  descripcion: String!
}



type Ubicacion {
  latitud: String!
  longitud: String!
}

type Evento {
  id: ID!
  titulo: String!
  descripcion: String!
  fecha: String!
  hora_inicio: String!
  zona: String!
  created_at: String
  direccion: String
  ubicacion: Ubicacion
  requiere_voluntarios: Boolean!
  cantidad_participantes_requeridos: Int
  image_url: String
  participantes: [Participantes]
  participantes_inscritos: Int
  distancia_m: Float
  tareas: [Tarea]
  materiales_requeridos: String
  habilidades_requeridas: String
  requisitos_adicionales: String
  estaInscrito: Boolean
  categoria: Categoria
}

type Participantes {
  id_usuario: ID!
  id_evento: ID!
  fecha_inscripcion: String!
}




type Query {
  eventos(busqueda: String): [Evento]
  evento(id: ID!): Evento
  eventosPorCategoria(categoria: String!): [Evento]
  eventosCercanos(lat: Float!, lon: Float!, radio: Int): [Evento]
  # Faltas las queries para obtener los eventos por categoria, por usuario, por ubicacion
}
type Inscripcion{
  id_evento:ID!
  id_usuario:ID!
  fecha_inscripcion:String!
}
type Mutation {
  createEvent(input: CreateEventInput!): Evento!
  inscribirse(eventoId:ID):Inscripcion!
}

input CreateEventInput {
  titulo: String!
  descripcion: String!
  fecha: String!
  hora_inicio: String!
  zona: String
  direccion: String!
  ubicacion: UbicacionInput!
  requiere_voluntarios: Boolean!
  cantidad_participantes_requeridos: Int
  image_url: String
  categoria: String!
  materiales_requeridos: String
  habilidades_requeridas: String
  requisitos_adicionales: String
  organizador_id: ID!
  tareas: [TareaInput!]
}

input UbicacionInput {
  latitud: Float!
  longitud: Float!
}


type Subscription {
  tareaCompletada(userId: ID!, eventId: ID!): NotificacionTarea
  cambioEstadoEvento(userId: ID!, eventId: ID!): NotificacionEvento
  eventoProximoComenzar(userId: ID!, eventId: ID!): NotificacionProximoEvento
}

type NotificacionTarea {
  tareaId: ID!
  titulo: String!
  completada_por: Usuario!
  fecha_completado: String!
}

type NotificacionEvento {
  eventoId: ID!
  nombre: String!
  estado: String!
  fecha_cambio: String!
}

type NotificacionProximoEvento {
  eventoId: ID!
  nombre: String!
  fecha_inicio: String!
  tiempo_restante: Int!
}

type Usuario {
  id: ID!
  nombre: String!
}