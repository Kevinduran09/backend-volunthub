type categoria {
  id: ID!
  nombre: String!
  descripcion: String!
}
type Ubicacion {
  latitud: String!
  longitud: String!
}
type Evento {
  id: ID!
  titulo: String!
  descripcion: String!
  fecha: String!
  hora_inicio: String!
  zona: String!
  created_at: String

  ubicacion: Ubicacion!
  requiere_voluntarios: Boolean!
  image_url: String
}

type Query {
  eventos: [Evento]
  evento(id: ID!): Evento
  eventosPorCategoria(categoriaId: ID!): [Evento]
  # Falta la query para obtener los eventos por ubicacion y los eventos por usuario

  direccion: String
  ubicacion: Ubicacion
  requiere_voluntarios: Boolean!
  cantidad_participantes_requeridos: Int
  image_url: String
  participantes: [Participantes]
  participantes_inscritos: Int
  distancia_m: Float
}
type Participantes {
  id_usuario: ID!
  id_evento: ID!
  fecha_inscripcion: String!
}
type Query {
  eventos(busqueda: String): [Evento]
  evento(id: ID!): Evento
  eventosCercanos(lat: Float!, lon: Float!, radio: Int): [Evento]
  # Faltas las queries para obtener los eventos por categoria, por usuario, por ubicacion
}
type Mutation {
  createEvent(input: CreateEventInput!): Evento!
}
input CreateEventInput {
  titulo: String!
  descripcion: String!
  fecha: String!
  hora_inicio: String!
  zona: String
  direccion: String!
  ubicacion: UbicacionInput!
  requiere_voluntarios: Boolean!
  cantidad_participantes_requeridos: Int
  image_url: String
  categoria: String!
  materiales_requeridos: String
  habilidades_requeridas: String
  requisitos_adicionales: String
  organizador_id: ID!
  tareas: [TareaInput!]
}

input UbicacionInput {
  latitud: Float!
  longitud: Float!
}

input TareaInput {
  nombre: String!
  prioridad: String!
  descripcion: String!
  estado: String!
}
